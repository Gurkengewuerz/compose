services:
  synapse:
    image: matrixdotorg/synapse:v1.139.0
    restart: unless-stopped
    depends_on: [db]
    networks: [default, traefik]
    volumes:
      - "${CONTAINER_DIR}/synapse:/data"
    environment:
      - UID=1000
      - GID=1000
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.synapse.entrypoints=websecure"
      - "traefik.http.routers.synapse.rule=HOST(`$VIRTUAL_HOST`)"
      - "traefik.http.routers.synapse.service=synapse-srv"
      - "traefik.http.services.synapse-srv.loadbalancer.server.port=8008"

      - "backup.enable=true"
      - "backup.password=$RESTIC_PASSWORD"
      - "backup.volumes=${CONTAINER_DIR}/synapse"

      - "diun.enable=true"

      - "telegraf.enabled=true"

    logging:
      driver: "json-file"
      options:
        max-size: "512k"
        max-file: "1"

  synapse-admin:
    image: ghcr.io/etkecc/synapse-admin:latest
    restart: unless-stopped
    depends_on: [db]
    networks: [traefik]
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.synapse-admin.rule=HOST(`$VIRTUAL_HOST`) && PathPrefix(`/admin`)"
      - "traefik.http.routers.synapse-admin.middlewares=admin,admin_path"
      - "traefik.http.middlewares.admin.redirectregex.regex=^(.*)/admin/?"
      - "traefik.http.middlewares.admin.redirectregex.replacement=$${1}/admin/"
      - "traefik.http.middlewares.admin_path.stripprefix.prefixes=/admin"
      
      - "com.centurylinklabs.watchtower.enable=true"
    logging:
      driver: "json-file"
      options:
        max-size: "512k"
        max-file: "1"

  mas:
    image: ghcr.io/element-hq/matrix-authentication-service:latest
    restart: unless-stopped
    depends_on: [db]
    networks: [default, traefik]
    environment:
      - MAS_CONFIG=/app/config/config.yaml
    volumes:
      - "${CONTAINER_DIR}/mas/config.yaml:/app/config/config.yaml:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.mas.entrypoints=websecure"
      - "traefik.http.routers.mas.rule=HOST(`$VIRTUAL_HOST_MAS`)"
      - "traefik.http.routers.mas.service=mas-srv"
      - "traefik.http.services.mas-srv.loadbalancer.server.port=8080"

      - "traefik.http.routers.matrix-auth.entrypoints=websecure"
      - "traefik.http.routers.matrix-auth.rule=HOST(`$VIRTUAL_HOST`) && PathRegexp(`/_matrix/client/.+/(login|logout|refresh)`)"
      - "traefik.http.routers.matrix-auth.service=mas-srv"

      - "backup.enable=true"
      - "backup.password=$RESTIC_PASSWORD"
      - "backup.volumes=${CONTAINER_DIR}/mas"
    logging:
      driver: "json-file"
      options:
        max-size: "512k"
        max-file: "1"

  livekit:
    image: livekit/livekit-server:latest
    command: --config /livekit/config.yaml
    restart: unless-stopped
    networks: [default, traefik]
    volumes:
      - "${CONTAINER_DIR}/livekit:/livekit:ro"
    ports:
      # Fallback Peer Connection via TCP
      - "7881:7881"
      # WebRTC UDP Ports
      - "50000-50200:50000-50200/udp"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.livekit.entrypoints=websecure"
      - "traefik.http.routers.livekit.rule=HOST(`$VIRTUAL_HOST`) && PathPrefix(`/livekit/sfu`)"
      - "traefik.http.routers.livekit.service=livekit-srv"
      - "traefik.http.routers.livekit.middlewares=livekit_path"
      - "traefik.http.services.livekit-srv.loadbalancer.server.port=7880"
      - "traefik.http.middlewares.livekit_path.stripprefix.prefixes=/livekit/sfu"

      - "backup.enable=true"
      - "backup.password=$RESTIC_PASSWORD"
      - "backup.volumes=${CONTAINER_DIR}/livekit"
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "1"

  jwt-service:
    image: ghcr.io/element-hq/lk-jwt-service:latest-ci
    restart: unless-stopped
    networks: [default, traefik]
    environment:
      - LIVEKIT_URL=wss://$VIRTUAL_HOST/livekit/sfu
      - LIVEKIT_SECRET=$LIVEKIT_SECRET
      - LIVEKIT_KEY=$LIVEKIT_KEY
      - LIVEKIT_FULL_ACCESS_HOMESERVERS=$HOMESERVER
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.matrix-sfu.entrypoints=websecure"
      - "traefik.http.routers.matrix-sfu.rule=HOST(`$VIRTUAL_HOST`) && PathPrefix(`/livekit/jwt`)"
      - "traefik.http.routers.matrix-sfu.service=matrix-sfu-srv"
      - "traefik.http.routers.matrix-sfu.middlewares=matrix-sfu_path"
      - "traefik.http.services.matrix-sfu-srv.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.matrix-sfu_path.stripprefix.prefixes=/livekit/jwt"
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "1"

  db:
    image: docker.io/postgres:15-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=synapse
      - POSTGRES_PASSWORD=synapse
      # ensure the database gets created correctly
      # https://element-hq.github.io/synapse/latest/postgres.html#set-up-database
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - "${CONTAINER_DIR}/db_15/schemas:/var/lib/postgresql/data"
    healthcheck:
      test: pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "512k"
        max-file: "1"

  backup:
    image: tiredofit/db-backup:4.0.19
    restart: unless-stopped
    depends_on: [db]
    volumes:
      - "${CONTAINER_DIR}/db-backup:/backup"
    environment:
      - TIMEZONE=UTC
      - CONTAINER_ENABLE_MONITORING=FALSE
      - DEFAULT_LOG_LEVEL=WARN

      - DEFAULT_CREATE_LATEST_SYMLINK=TRUE
      - BACKUP_JOB_CONCURRENCY=1
      - DEFAULT_CHECKSUM=NONE
      - DEFAULT_COMPRESSION=NONE
      - DEFAULT_BACKUP_INTERVAL=1440
      - DEFAULT_BACKUP_BEGIN=0315
      - DEFAULT_CLEANUP_TIME=10080

      - DB01_TYPE=postgres
      - DB01_HOST=db
      - DB01_NAME=synapse
      - DB01_USER=synapse
      - DB01_PASS=synapse
    labels:
      - "backup.enable=true"
      - "backup.password=$RESTIC_PASSWORD"
      - "backup.volumes=${CONTAINER_DIR}/db-backup"

networks:
  traefik:
    external: true
