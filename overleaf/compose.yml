services:
  sharelatex:
    container_name: sharelatex
    image: gurken2108/sharelatex-full:5.5.2-ext-v3.1
    restart: unless-stopped
    networks: [default, traefik]
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_started
    links: [mongo, redis]
    volumes:
      - ${CONTAINER_DIR}/sharelatex:/var/lib/overleaf
    environment:
      OVERLEAF_APP_NAME: $APP_NAME
      OVERLEAF_MONGO_URL: mongodb://mongo/sharelatex

      # Same property, unfortunately with different names in
      # different locations
      OVERLEAF_REDIS_HOST: redis
      REDIS_HOST: redis

      ENABLED_LINKED_FILE_TYPES: "project_file,project_output_file"

      # Enables Thumbnail generation using ImageMagick
      ENABLE_CONVERSIONS: "true"

      # Disables email confirmation requirement
      EMAIL_CONFIRMATION_DISABLED: "true"

      # temporary fix for LuaLaTex compiles
      # see https://github.com/overleaf/overleaf/issues/695
      TEXMFVAR: /var/lib/overleaf/tmp/texmf-var

      OVERLEAF_SITE_URL: https://$VIRTUAL_HOST
      OVERLEAF_NAV_TITLE: $APP_NAME
      OVERLEAF_ADMIN_EMAIL: $ADMIN_EMAIL
      COMPILE_TIMEOUT: 600

      OVERLEAF_PROXY_LEARN: "true"
      NAV_HIDE_POWERED_BY: "true"

      ## Set for SSL via nginx-proxy
      #VIRTUAL_HOST: 103.112.212.22

      # SHARELATEX_SITE_URL: http://sharelatex.mydomain.com
      # SHARELATEX_NAV_TITLE: Our ShareLaTeX Instance
      # SHARELATEX_HEADER_IMAGE_URL: http://somewhere.com/mylogo.png
      # SHARELATEX_ADMIN_EMAIL: support@it.com

      # SHARELATEX_LEFT_FOOTER: '[{"text": "Powered by <a href=\"https://www.sharelatex.com\">ShareLaTeX</a> 2016"},{"text": "Another page I want to link to can be found <a href=\"here\">here</a>"} ]'
      # SHARELATEX_RIGHT_FOOTER: '[{"text": "Hello I am on the Right"} ]'

      # SHARELATEX_EMAIL_FROM_ADDRESS: "team@sharelatex.com"

      # SHARELATEX_EMAIL_AWS_SES_ACCESS_KEY_ID:
      # SHARELATEX_EMAIL_AWS_SES_SECRET_KEY:

      # SHARELATEX_EMAIL_SMTP_HOST: smtp.mydomain.com
      # SHARELATEX_EMAIL_SMTP_PORT: 587
      # SHARELATEX_EMAIL_SMTP_SECURE: false
      # SHARELATEX_EMAIL_SMTP_USER:
      # SHARELATEX_EMAIL_SMTP_PASS:
      # SHARELATEX_EMAIL_SMTP_TLS_REJECT_UNAUTH: true
      # SHARELATEX_EMAIL_SMTP_IGNORE_TLS: false
      # SHARELATEX_EMAIL_SMTP_NAME: '127.0.0.1'
      # SHARELATEX_EMAIL_SMTP_LOGGER: true
      # SHARELATEX_CUSTOM_EMAIL_FOOTER: "This system is run by department x"

      ################
      ## Server Pro ##
      ################

      # SANDBOXED_COMPILES: 'true'

      # SANDBOXED_COMPILES_SIBLING_CONTAINERS: 'true'
      # SANDBOXED_COMPILES_HOST_DIR: '/var/sharelatex_data/data/compiles'

      # DOCKER_RUNNER: 'false'

      ## Works with test LDAP server shown at bottom of docker compose
      # SHARELATEX_LDAP_URL: 'ldap://ldap:389'
      # SHARELATEX_LDAP_SEARCH_BASE: 'ou=people,dc=planetexpress,dc=com'
      # SHARELATEX_LDAP_SEARCH_FILTER: '(uid={{username}})'
      # SHARELATEX_LDAP_BIND_DN: 'cn=admin,dc=planetexpress,dc=com'
      # SHARELATEX_LDAP_BIND_CREDENTIALS: 'GoodNewsEveryone'
      # SHARELATEX_LDAP_EMAIL_ATT: 'mail'
      # SHARELATEX_LDAP_NAME_ATT: 'cn'
      # SHARELATEX_LDAP_LAST_NAME_ATT: 'sn'
      # SHARELATEX_LDAP_UPDATE_USER_DETAILS_ON_LOGIN: 'true'

      # SHARELATEX_TEMPLATES_USER_ID: "578773160210479700917ee5"
      # SHARELATEX_NEW_PROJECT_TEMPLATE_LINKS: '[ {"name":"All Templates","url":"/templates/all"}]'

      # SHARELATEX_PROXY_LEARN: "true"

      EXTERNAL_AUTH: oidc

      OVERLEAF_OIDC_PROVIDER_ID: oidc
      OVERLEAF_OIDC_ISSUER: $OVERLEAF_OIDC_ISSUER
      OVERLEAF_OIDC_AUTHORIZATION_URL: $OVERLEAF_OIDC_AUTHORIZATION_URL
      OVERLEAF_OIDC_TOKEN_URL: $OVERLEAF_OIDC_TOKEN_URL
      OVERLEAF_OIDC_USER_INFO_URL: $OVERLEAF_OIDC_USER_INFO_URL
      OVERLEAF_OIDC_LOGOUT_URL: $OVERLEAF_OIDC_LOGOUT_URL
      OVERLEAF_OIDC_CLIENT_ID: $OVERLEAF_OIDC_CLIENT_ID
      OVERLEAF_OIDC_CLIENT_SECRET: $OVERLEAF_OIDC_CLIENT_SECRET
      #OVERLEAF_OIDC_IDENTITY_SERVICE_NAME: 'Log in with Keycloak OIDC Provider'
      OVERLEAF_OIDC_PROVIDER_NAME: $OVERLEAF_OIDC_PROVIDER_NAME
      OVERLEAF_OIDC_PROVIDER_INFO_LINK: $OVERLEAF_OIDC_PROVIDER_INFO_LINK
      OVERLEAF_OIDC_IS_ADMIN_FIELD: overleaf_group
      OVERLEAF_OIDC_IS_ADMIN_FIELD_VALUE: admin

      OVERLEAF_OIDC_UPDATE_USER_DETAILS_ON_LOGIN: "false"

    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.overleaf.entrypoints=websecure"
      - "traefik.http.routers.overleaf.rule=Host(`$VIRTUAL_HOST`)"

      - "diun.enable=true"

      - "telegraf.enabled=true"
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

  mongo:
    image: mongo:6.0
    command: "--replSet overleaf"
    restart: unless-stopped
    volumes:
      - ${CONTAINER_DIR}/mongo:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://localhost:27017/?authSource=overleaf --quiet
      interval: 10s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "512k"
        max-file: "1"

  mongoinit:
    image: mongo:6.0
    # this container will exit after executing the command
    restart: "no"
    depends_on:
      mongo:
        condition: service_healthy
    entrypoint:
      [
        "mongosh",
        "--host",
        "mongo:27017",
        "--eval",
        'rs.initiate({ _id: "overleaf", members: [ { _id: 0, host: "mongo:27017" } ] })',
      ]

  redis:
    image: redis:6
    restart: unless-stopped
    volumes:
      - ${CONTAINER_DIR}/redis:/data
    logging:
      driver: "json-file"
      options:
        max-size: "512k"
        max-file: "1"

  backup:
    image: tiredofit/db-backup:4.0.19
    restart: unless-stopped
    depends_on: [mongo]
    volumes:
      - "${CONTAINER_DIR}/db-backup:/backup"
    environment:
      - TIMEZONE=UTC
      - CONTAINER_ENABLE_MONITORING=FALSE
      - DEFAULT_LOG_LEVEL=WARN

      - DEFAULT_CREATE_LATEST_SYMLINK=TRUE
      - BACKUP_JOB_CONCURRENCY=1
      - DEFAULT_CHECKSUM=NONE
      - DEFAULT_COMPRESSION=NONE
      - DEFAULT_BACKUP_INTERVAL=1440
      - DEFAULT_BACKUP_BEGIN=0315
      - DEFAULT_CLEANUP_TIME=10080

      - DB01_TYPE=mongo
      - DB01_HOST=mongo
    labels:
      - "backup.enable=true"
      - "backup.password=$RESTIC_PASSWORD"
      - "backup.volumes=${CONTAINER_DIR}/db-backup"
    logging:
      driver: "json-file"
      options:
        max-size: "512k"
        max-file: "1"

networks:
  traefik:
    external: true
